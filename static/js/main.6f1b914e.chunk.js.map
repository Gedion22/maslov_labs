{"version":3,"sources":["Database.js","Dialog.js","AddDialog.js","App.js","reportWebVitals.js","index.js"],"names":["Database","data","barcode","name","price","addProduct","product","this","some","item","Error","re","match","length","push","findProduct","console","log","find","deleteProduct","index","indexOf","splice","AlertDialog","React","useState","open","setOpen","handleClose","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","AddDialog","success","setSuccess","setProduct","errorText","setErrorText","style","margin","className","noValidate","autoComplete","htmlFor","onChange","event","target","value","label","error","endAdornment","InputAdornment","position","disabled","result","characters","charactersLength","i","Math","floor","random","charAt","generateBarCode","e","message","App","text","setText","binary","setBinary","hex","setHex","findError","setFindError","useEffect","arr","str","hexStr","parseInt","toString","bwipjs","toCanvas","bcid","scale","height","includetext","textxalign","fileOnChange","a","Tesseract","recognize","files","logger","then","replace","InputLabel","FilledInput","onChangeTextInput","join","textDecoration","marginBottom","download","href","image","document","getElementById","toDataURL","marginLeft","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6f1b914e.chunk.js","sourcesContent":["export const Database = {\n    data:[\n        {\n            barcode:'123',\n            name:'product1',\n            price:10,\n        },\n        {\n            barcode:'ABC',\n            name:'product2',\n            price:20,\n        },\n        {\n            barcode:'0A1',\n            name:'product3',\n            price:30,\n        },\n        {\n            barcode:'95D',\n            name:'product4',\n            price:40,\n        },\n    ],\n    addProduct: function(product) {\n        if(this.data.some(item => item.barcode === product.barcode)){\n            throw new Error('Barcode already exist');\n        }\n        const re = /[0-9A-F]*/g;\n        if(product.barcode.match(re).length === 2 && product.barcode.match(re)[0]) {\n            this.data.push(product);\n        } else {\n            throw new Error('Barcode not hex');\n        }\n    },\n    findProduct: function(barcode) {\n        console.log(this.data, barcode);\n        const product = this.data.find(item => item.barcode === barcode);\n        console.log(product);\n        if(!product){\n            throw new Error('Barcode dont exist');\n        }\n        return product;\n    },\n    deleteProduct: function (barcode) {\n        if(!this.data.some(item => item.barcode === barcode)){\n            throw new Error('Barcode dont exist');\n        }\n        const product = this.data.find(item => item.barcode === barcode);\n        const index = this.data.indexOf(product);\n        this.data.splice(index, 1);\n    },\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport function AlertDialog() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Help\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Plessey barcode\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        This symbology supports the following hexadecimal characters:\n                        1.All numeric digits (0-9)\n                        2.Uppercase letters A-F\n                        (Try 123, ABC, 0A1, 95D)\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput/FilledInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {AlertDialog} from \"./Dialog\";\nimport {Database} from \"./Database\";\n\nexport function AddDialog() {\n    const [open, setOpen] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [product, setProduct] = React.useState({});\n    const [errorText, setErrorText] = React.useState('');\n\n    const generateBarCode = () => {\n        let result = '';\n        let characters ='ABCDEF0123456789';\n        let charactersLength = characters.length;\n        for ( let i = 0; i < Math.floor(Math.random() * 10); i++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const addProduct = ()=>{\n        try{\n            let data = {...product};\n            if(!product.barcode){\n                product.barcode = generateBarCode();\n            }\n            Database.addProduct(product);\n            setSuccess(true)\n        }catch (e) {\n            console.log(e.message);\n            setErrorText(e.message)\n        }\n    };\n\n    return (\n        <div>\n            <Button style={{margin: 10}} variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n                Add Product\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{success?'Success':'Add product'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {success?'Barcode: '+product.barcode:'Enter fields'}\n                    </DialogContentText>\n                    {!success && <form className={'root'} noValidate autoComplete=\"off\">\n                        <InputLabel htmlFor=\"standard-adornment-password\">Name</InputLabel>\n                        <FilledInput onChange={(event)=> setProduct({...product, name: event.target.value})} id=\"outlined-basic\" label=\"Find\" variant=\"outlined\"/>\n                        <InputLabel htmlFor=\"standard-adornment-password\">Price</InputLabel>\n                        <FilledInput onChange={(event)=> setProduct({...product, price: event.target.value})} id=\"outlined-basic\" label=\"Find\" variant=\"outlined\"/>\n                        <InputLabel htmlFor=\"standard-adornment-password\">Barcode (optional)</InputLabel>\n                        <FilledInput error={!!errorText} onChange={(event)=> setProduct({...product, barcode: event.target.value})} id=\"outlined-basic\" label=\"Find\" variant=\"outlined\" endAdornment={\n                            <InputAdornment position=\"end\">\n                                <AlertDialog />\n                            </InputAdornment>\n                        } />\n                        <p style={{color:'red'}}>{errorText}</p>\n                    </form>}\n                </DialogContent>\n                <DialogActions>\n                    {success ? <Button onClick={handleClose} color=\"primary\">\n                            Ok\n                        </Button>:\n                        <Button disabled={!(product.name && product.price)} onClick={addProduct} color=\"primary\">\n                        Add\n                    </Button>}\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import './App.css';\nimport React, {useEffect, useState} from 'react'\nimport bwipjs from \"bwip-js\";\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Tesseract from 'tesseract.js';\nimport { Database } from './Database';\nimport { AlertDialog } from './Dialog';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport {AddDialog} from \"./AddDialog\";\n\nfunction App() {\n\n  const [ text, setText] = useState('');\n  const [ binary, setBinary] = useState([]);\n  const [ hex, setHex] = useState(false);\n  const [ product, setProduct] = useState(null);\n  const [ findError, setFindError] = useState('');\n\n  useEffect(()=>{\n    let arr = [];\n    try {\n      for(let i = 0; i < text.length; i++){\n        let str = '';\n        let hexStr = parseInt(text[i], 16).toString(2);\n        if(hexStr.length < 4){\n          for(let i = 0; i < 4 - hexStr.length; i++){\n            str += '0';\n          }\n        }\n        arr.push(str + parseInt(text[i], 16).toString(2))\n      }\n      setBinary(arr)\n      let canvas = bwipjs.toCanvas(\"mycanvas\", {\n        bcid: \"plessey\", // Barcode type\n        text: text, // Text to encode\n        scale: 3, // 3x scaling factor\n        height: 10, // Bar height, in millimeters\n        includetext: true, // Show human-readable text\n        textxalign: \"center\" // Always good to set this\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n  }, [product]);\n\n  const download = () => {\n    let canvas = document.getElementById(\"mycanvas\");\n    let image = canvas.toDataURL(\"image/png\");\n    let el = document.getElementById(\"download\");\n    el.href = image;\n  };\n  const onChangeTextInput = (event)=> {\n    try {\n      const re = /[0-9A-F]*/g;\n      if (event.target.value.match(re).length === 2 && event.target.value.match(re)[0]) {\n        setHex(true);\n        setText(event.target.value);\n        setFindError('')\n      } else if (event.target.value){\n        setHex(false);\n        setFindError('Barcode not hex')\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const findClick = () => {\n    try {\n      setProduct(Database.findProduct(text));\n      setFindError('')\n    } catch (e) {\n      setProduct(null);\n      setFindError(e.message)\n    }\n  };\n\n  const fileOnChange = async (event) => {\n    setProduct(null);\n    setFindError('');\n    Tesseract.recognize(event.target.files[0], 'eng', {\n      logger: data => console.log(data),\n    }).then(({ data: {text }}) => {\n      const barcode = text.replace(/\\s/g, \"\")\n      setText(barcode);\n      try {\n        setProduct(Database.findProduct(barcode));\n        setFindError('')\n      } catch (e) {\n        setProduct(null);\n        setFindError(e.message)\n      }\n    })\n  };\n\n  const deleteOnClick = () =>{\n    try{\n      Database.deleteProduct(text);\n      setProduct(null);\n      setFindError('')\n    }catch (e) {\n      setFindError(e.message)\n    }\n  };\n\n  return (\n      <div className=\"App\">\n        <body className=\"App-header\">\n        <p>Maslov KP-01mp</p>\n        <p>Variant 14 - Plessey</p>\n        <div>\n          <AddDialog />\n          <form className={'root'} noValidate autoComplete=\"off\">\n            <InputLabel htmlFor=\"standard-adornment-password\">Find</InputLabel>\n            <FilledInput onChange={(event)=> onChangeTextInput(event)} id=\"outlined-basic\" label=\"Find\" variant=\"outlined\" endAdornment={\n              <InputAdornment position=\"end\">\n                <Button onClick={findClick} disabled={!hex} variant=\"outlined\" color=\"primary\">\n                  Find\n                </Button>\n                <AlertDialog />\n              </InputAdornment>\n            } />\n          </form>\n          {findError && <p>{findError}</p>}\n          {product && <div>\n            <p>{'Name: '+product.name}</p>\n            <p>{'Price: '+product.price}</p>\n            <p>{'Barcode: '+product.barcode}</p>\n            {text && product && <canvas id=\"mycanvas\"/>}\n            {product && <p>{binary.join(' ')}</p>}\n            {product && <a style={{ textDecoration: 'none', marginBottom: 20 }} id=\"download\" download=\"barcode.png\" href=\"\" onClick={()=>download()}>\n              <Button variant=\"contained\" color=\"primary\">\n                Download\n              </Button></a>}\n            {product && <Button style={{marginLeft: 10}} onClick={deleteOnClick} variant=\"contained\" color=\"primary\">\n              Delete\n            </Button>}\n          </div>}\n        </div>\n        <div>\n          <p>Decode BarCode</p>\n          <input type='file' id='multi' onChange={async (event)=>await fileOnChange(event)} />\n        </div>\n        </body>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}